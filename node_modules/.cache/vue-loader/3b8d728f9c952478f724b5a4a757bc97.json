{"remainingRequest":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/michaelfigg/Documents/GitHub/yallastoreadmin/src/router/views/settings/design/design.vue?vue&type=template&id=000ae6c1&","dependencies":[{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/src/router/views/settings/design/design.vue","mtime":1606849847767},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1606587964121},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/vue-loader/lib/index.js","mtime":1606587964121}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
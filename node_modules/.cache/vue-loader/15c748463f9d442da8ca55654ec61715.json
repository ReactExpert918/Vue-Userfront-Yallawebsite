{"remainingRequest":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/michaelfigg/Documents/GitHub/yallastorefrontend/src/components/right-bar.vue?vue&type=template&id=f34c67fc&","dependencies":[{"path":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/src/components/right-bar.vue","mtime":1610144252224},{"path":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1606587964121},{"path":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/vue-loader/lib/index.js","mtime":1606587964121}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
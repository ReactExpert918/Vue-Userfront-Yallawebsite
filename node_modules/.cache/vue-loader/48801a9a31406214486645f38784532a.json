{"remainingRequest":"/Users/michaelfigg/Documents/GitHub/YallaAdmin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/michaelfigg/Documents/GitHub/YallaAdmin/src/router/views/analytics/settings/settings.vue?vue&type=template&id=fe800b90&","dependencies":[{"path":"/Users/michaelfigg/Documents/GitHub/YallaAdmin/src/router/views/analytics/settings/settings.vue","mtime":1606686795529},{"path":"/Users/michaelfigg/Documents/GitHub/YallaAdmin/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/YallaAdmin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1606587964121},{"path":"/Users/michaelfigg/Documents/GitHub/YallaAdmin/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/YallaAdmin/node_modules/vue-loader/lib/index.js","mtime":1606587964121}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
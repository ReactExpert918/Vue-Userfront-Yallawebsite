{"remainingRequest":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/michaelfigg/Documents/GitHub/yallastorefrontend/src/router/views/frontend/category/category.vue?vue&type=template&id=04a86e30&","dependencies":[{"path":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/src/router/views/frontend/category/category.vue","mtime":1611098335163},{"path":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1606587964121},{"path":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/yallastorefrontend/node_modules/vue-loader/lib/index.js","mtime":1606587964121}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
{"remainingRequest":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/michaelfigg/Documents/GitHub/yallastoreadmin/src/router/views/sales/orders/edit/edit.vue?vue&type=template&id=7544fce6&","dependencies":[{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/src/router/views/sales/orders/edit/edit.vue","mtime":1610821839896},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1606587964121},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/vue-loader/lib/index.js","mtime":1606587964121}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
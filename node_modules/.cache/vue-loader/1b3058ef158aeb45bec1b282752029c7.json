{"remainingRequest":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/michaelfigg/Documents/GitHub/yallastoreadmin/src/components/horizontal-topbar.vue?vue&type=template&id=2469a107&","dependencies":[{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/src/components/horizontal-topbar.vue","mtime":1606601891740},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1606587964121},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/cache-loader/dist/cjs.js","mtime":1606587962276},{"path":"/Users/michaelfigg/Documents/GitHub/yallastoreadmin/node_modules/vue-loader/lib/index.js","mtime":1606587964121}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxoZWFkZXIgaWQ9InBhZ2UtdG9wYmFyIj4KICA8ZGl2IGNsYXNzPSJuYXZiYXItaGVhZGVyIj4KICAgIDxkaXYgY2xhc3M9ImQtZmxleCI+CiAgICAgIDwhLS0gTE9HTyAtLT4KICAgICAgPGRpdiBjbGFzcz0ibmF2YmFyLWJyYW5kLWJveCI+CiAgICAgICAgPHJvdXRlci1saW5rIHRvPSIvIiBjbGFzcz0ibG9nbyBsb2dvLWRhcmsiPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImxvZ28tc20iPgogICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvaW1hZ2VzL2xvZ28uc3ZnIiBhbHQgaGVpZ2h0PSIyMiIgLz4KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJsb2dvLWxnIj4KICAgICAgICAgICAgPGltZyBzcmM9IkAvYXNzZXRzL2ltYWdlcy9sb2dvLWRhcmsucG5nIiBhbHQgaGVpZ2h0PSIxNyIgLz4KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3JvdXRlci1saW5rPgoKICAgICAgICA8cm91dGVyLWxpbmsgdG89Ii8iIGNsYXNzPSJsb2dvIGxvZ28tbGlnaHQiPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImxvZ28tc20iPgogICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvaW1hZ2VzL2xvZ28tbGlnaHQuc3ZnIiBhbHQgaGVpZ2h0PSIyMiIgLz4KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJsb2dvLWxnIj4KICAgICAgICAgICAgPGltZyBzcmM9IkAvYXNzZXRzL2ltYWdlcy9sb2dvLWxpZ2h0LnBuZyIgYWx0IGhlaWdodD0iMTkiIC8+CiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9yb3V0ZXItbGluaz4KICAgICAgPC9kaXY+CiAgICAgIDxidXR0b24gaWQ9InRvZ2dsZSIgdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1zbSBtci0yIGZvbnQtc2l6ZS0xNiBkLWxnLW5vbmUgaGVhZGVyLWl0ZW0iIEBjbGljaz0idG9nZ2xlTWVudSI+CiAgICAgICAgPGkgY2xhc3M9ImZhIGZhLWZ3IGZhLWJhcnMiPjwvaT4KICAgICAgPC9idXR0b24+CgogICAgICA8IS0tIEFwcCBTZWFyY2gtLT4KICAgICAgPGZvcm0gY2xhc3M9ImFwcC1zZWFyY2ggZC1ub25lIGQtbGctYmxvY2siPgogICAgICAgIDxkaXYgY2xhc3M9InBvc2l0aW9uLXJlbGF0aXZlIj4KICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iU2VhcmNoLi4uIiAvPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImJ4IGJ4LXNlYXJjaC1hbHQiPjwvc3Bhbj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9mb3JtPgoKICAgICAgPGItZHJvcGRvd24gdmFyaWFudD0iYmxhY2siIGNsYXNzPSJkcm9wZG93bi1tZWdhIGQtbm9uZSBkLWxnLWJsb2NrIG1sLTIiIHRvZ2dsZS1jbGFzcz0iaGVhZGVyLWl0ZW0iIG1lbnUtY2xhc3M9ImRyb3Bkb3duLW1lZ2FtZW51Ij4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmJ1dHRvbi1jb250ZW50PgogICAgICAgICAge3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS50ZXh0IikgfX0KICAgICAgICAgIDxpIGNsYXNzPSJtZGkgbWRpLWNoZXZyb24tZG93biI+PC9pPgogICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tOCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJmb250LXNpemUtMTQgbXQtMCI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS51aWNvbnRlbnQudGl0bGUiKSB9fTwvaDU+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Imxpc3QtdW5zdHlsZWQgbWVnYW1lbnUtbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm1lZ2FtZW51LnVpY29udGVudC5saXN0LmxpZ2h0Ym94IikgfX08L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm1lZ2FtZW51LnVpY29udGVudC5saXN0LnJhbmdlc2xpZGVyIikgfX08L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm1lZ2FtZW51LnVpY29udGVudC5saXN0LnN3ZWV0YWxlcnQiKSB9fTwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubWVnYW1lbnUudWljb250ZW50Lmxpc3QucmF0aW5nIikgfX08L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm1lZ2FtZW51LnVpY29udGVudC5saXN0LmZvcm1zIikgfX08L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm1lZ2FtZW51LnVpY29udGVudC5saXN0LnRhYmxlcyIpIH19PC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS51aWNvbnRlbnQubGlzdC5jaGFydHMiKSB9fTwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0iZm9udC1zaXplLTE0IG10LTAiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubWVnYW1lbnUuYXBwbGljYXRpb24udGl0bGUiKSB9fTwvaDU+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Imxpc3QtdW5zdHlsZWQgbWVnYW1lbnUtbGlzdCI+CiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm1lZ2FtZW51LmFwcGxpY2F0aW9uLmxpc3QuZWNvbW1lcmNlIikgfX08L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm1lZ2FtZW51LmFwcGxpY2F0aW9uLmxpc3QuY2FsZW5kYXIiKSB9fTwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubWVnYW1lbnUuYXBwbGljYXRpb24ubGlzdC5lbWFpbCIpIH19PC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS5hcHBsaWNhdGlvbi5saXN0LnByb2plY3RzIikgfX08L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm1lZ2FtZW51LmFwcGxpY2F0aW9uLmxpc3QudGFza3MiKSB9fTwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubWVnYW1lbnUuYXBwbGljYXRpb24ubGlzdC5jb250YWN0cyIpIH19PC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJmb250LXNpemUtMTQgbXQtMCI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS5leHRyYXBhZ2VzLnRpdGxlIikgfX08L2g1PgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJsaXN0LXVuc3R5bGVkIG1lZ2FtZW51LWxpc3QiPgogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS5leHRyYXBhZ2VzLmxpc3QubGlnaHRzaWRlYmFyIikgfX08L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm1lZ2FtZW51LmV4dHJhcGFnZXMubGlzdC5jb21wYWN0c2lkZWJhciIpIH19PC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS5leHRyYXBhZ2VzLmxpc3QuaG9yaXpvbnRhbGxheW91dCIpIH19PC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS5leHRyYXBhZ2VzLmxpc3QubWFpbnRlbmFuY2UiKSB9fTwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubWVnYW1lbnUuZXh0cmFwYWdlcy5saXN0LmNvbWluZ3Nvb24iKSB9fTwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubWVnYW1lbnUuZXh0cmFwYWdlcy5saXN0LnRpbWVsaW5lIikgfX08L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm1lZ2FtZW51LmV4dHJhcGFnZXMubGlzdC5mYXFzIikgfX08L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTQiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS02Ij4KICAgICAgICAgICAgICAgIDxoNSBjbGFzcz0iZm9udC1zaXplLTE0IG10LTAiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubWVnYW1lbnUudWljb250ZW50LnRpdGxlIikgfX08L2g1PgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJsaXN0LXVuc3R5bGVkIG1lZ2FtZW51LWxpc3QiPgogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS51aWNvbnRlbnQubGlzdC5saWdodGJveCIpIH19PC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS51aWNvbnRlbnQubGlzdC5yYW5nZXNsaWRlciIpIH19PC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS51aWNvbnRlbnQubGlzdC5zd2VldGFsZXJ0IikgfX08L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm1lZ2FtZW51LnVpY29udGVudC5saXN0LnJhdGluZyIpIH19PC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS51aWNvbnRlbnQubGlzdC5mb3JtcyIpIH19PC9hPgogICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5tZWdhbWVudS51aWNvbnRlbnQubGlzdC50YWJsZXMiKSB9fTwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubWVnYW1lbnUudWljb250ZW50Lmxpc3QuY2hhcnRzIikgfX08L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNSI+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvaW1hZ2VzL21lZ2FtZW51LWltZy5wbmciIGFsdCBjbGFzcz0iaW1nLWZsdWlkIG14LWF1dG8gZC1ibG9jayIgLz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2ItZHJvcGRvd24+CiAgICA8L2Rpdj4KCiAgICA8ZGl2IGNsYXNzPSJkLWZsZXgiPgogICAgICA8Yi1kcm9wZG93biBjbGFzcz0iZC1pbmxpbmUtYmxvY2sgZC1sZy1ub25lIG1sLTIiIHZhcmlhbnQ9ImJsYWNrIiBtZW51LWNsYXNzPSJkcm9wZG93bi1tZW51LWxnIHAtMCIgdG9nZ2xlLWNsYXNzPSJoZWFkZXItaXRlbSBub3RpLWljb24iIHJpZ2h0PgogICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YnV0dG9uLWNvbnRlbnQ+CiAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1tYWduaWZ5Ij48L2k+CiAgICAgICAgPC90ZW1wbGF0ZT4KCiAgICAgICAgPGZvcm0gY2xhc3M9InAtMyI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIG0tMCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIj4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9IlNlYXJjaCAuLi4iIGFyaWEtbGFiZWw9IlJlY2lwaWVudCdzIHVzZXJuYW1lIiAvPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwLWFwcGVuZCI+CiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIHR5cGU9InN1Ym1pdCI+CiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJtZGkgbWRpLW1hZ25pZnkiPjwvaT4KICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZm9ybT4KICAgICAgPC9iLWRyb3Bkb3duPgogICAgICA8Yi1kcm9wZG93biB2YXJpYW50PSJ3aGl0ZSIgcmlnaHQgdG9nZ2xlLWNsYXNzPSJoZWFkZXItaXRlbSI+CiAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDpidXR0b24tY29udGVudD4KICAgICAgICAgIDxpbWcgY2xhc3MgOnNyYz0iZmxhZyIgYWx0PSJIZWFkZXIgTGFuZ3VhZ2UiIGhlaWdodD0iMTYiIC8+CiAgICAgICAgICB7eyB0ZXh0IH19CiAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIGNsYXNzPSJub3RpZnktaXRlbSIgdi1mb3I9IihlbnRyeSwgaSkgaW4gbGFuZ3VhZ2VzIiA6a2V5PSJgTGFuZyR7aX1gIiA6dmFsdWU9ImVudHJ5IiBAY2xpY2s9InNldExhbmd1YWdlKGVudHJ5Lmxhbmd1YWdlLCBlbnRyeS50aXRsZSwgZW50cnkuZmxhZykiIDpjbGFzcz0ieyBhY3RpdmU6IGN1cnJlbnRfbGFuZ3VhZ2UgPT09IGVudHJ5Lmxhbmd1YWdlIH0iPgogICAgICAgICAgPGltZyA6c3JjPSJgJHtlbnRyeS5mbGFnfWAiIGFsdD0idXNlci1pbWFnZSIgY2xhc3M9Im1yLTEiIGhlaWdodD0iMTIiIC8+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iYWxpZ24tbWlkZGxlIj57eyBlbnRyeS50aXRsZSB9fTwvc3Bhbj4KICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgPC9iLWRyb3Bkb3duPgoKICAgICAgPGItZHJvcGRvd24gY2xhc3M9ImQtbm9uZSBkLWxnLWlubGluZS1ibG9jayBub3RpLWljb24iIG1lbnUtY2xhc3M9ImRyb3Bkb3duLW1lbnUtbGciIHJpZ2h0IHRvZ2dsZS1jbGFzcz0iaGVhZGVyLWl0ZW0iIHZhcmlhbnQ9ImJsYWNrIj4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmJ1dHRvbi1jb250ZW50PgogICAgICAgICAgPGkgY2xhc3M9ImJ4IGJ4LWN1c3RvbWl6ZSI+PC9pPgogICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgIDxkaXYgY2xhc3M9InB4LWxnLTIiPgogICAgICAgICAgPGRpdiBjbGFzcz0icm93IG5vLWd1dHRlcnMiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcm9wZG93bi1pY29uLWl0ZW0iIGhyZWY9ImphdmFzY3JpcHQ6IHZvaWQoMCk7Ij4KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJAL2Fzc2V0cy9pbWFnZXMvYnJhbmRzL2dpdGh1Yi5wbmciIGFsdD0iR2l0aHViIiAvPgogICAgICAgICAgICAgICAgPHNwYW4+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5zaXRlLmxpc3QuZ2l0aHViIikgfX08L3NwYW4+CiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taWNvbi1pdGVtIiBocmVmPSJqYXZhc2NyaXB0OiB2b2lkKDApOyI+CiAgICAgICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvaW1hZ2VzL2JyYW5kcy9iaXRidWNrZXQucG5nIiBhbHQ9ImJpdGJ1Y2tldCIgLz4KICAgICAgICAgICAgICAgIDxzcGFuPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24uc2l0ZS5saXN0LmdpdGh1YiIpIH19PC9zcGFuPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCI+CiAgICAgICAgICAgICAgPGEgY2xhc3M9ImRyb3Bkb3duLWljb24taXRlbSIgaHJlZj0iamF2YXNjcmlwdDogdm9pZCgwKTsiPgogICAgICAgICAgICAgICAgPGltZyBzcmM9IkAvYXNzZXRzL2ltYWdlcy9icmFuZHMvZHJpYmJibGUucG5nIiBhbHQ9ImRyaWJiYmxlIiAvPgogICAgICAgICAgICAgICAgPHNwYW4+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5zaXRlLmxpc3QuZHJpYmJibGUiKSB9fTwvc3Bhbj4KICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgPGRpdiBjbGFzcz0icm93IG5vLWd1dHRlcnMiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJkcm9wZG93bi1pY29uLWl0ZW0iIGhyZWY9ImphdmFzY3JpcHQ6IHZvaWQoMCk7Ij4KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJAL2Fzc2V0cy9pbWFnZXMvYnJhbmRzL2Ryb3Bib3gucG5nIiBhbHQ9ImRyb3Bib3giIC8+CiAgICAgICAgICAgICAgICA8c3Bhbj57eyAkdCgibmF2YmFyLmRyb3Bkb3duLnNpdGUubGlzdC5kcm9wYm94IikgfX08L3NwYW4+CiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taWNvbi1pdGVtIiBocmVmPSJqYXZhc2NyaXB0OiB2b2lkKDApOyI+CiAgICAgICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvaW1hZ2VzL2JyYW5kcy9tYWlsX2NoaW1wLnBuZyIgYWx0PSJtYWlsX2NoaW1wIiAvPgogICAgICAgICAgICAgICAgPHNwYW4+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5zaXRlLmxpc3QubWFpbGNoaW1wIikgfX08L3NwYW4+CiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIj4KICAgICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taWNvbi1pdGVtIiBocmVmPSJqYXZhc2NyaXB0OiB2b2lkKDApOyI+CiAgICAgICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvaW1hZ2VzL2JyYW5kcy9zbGFjay5wbmciIGFsdD0ic2xhY2siIC8+CiAgICAgICAgICAgICAgICA8c3Bhbj57eyAkdCgibmF2YmFyLmRyb3Bkb3duLnNpdGUubGlzdC5zbGFjayIpIH19PC9zcGFuPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9iLWRyb3Bkb3duPgoKICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24gZC1ub25lIGQtbGctaW5saW5lLWJsb2NrIG1sLTEiPgogICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGhlYWRlci1pdGVtIG5vdGktaWNvbiIgQGNsaWNrPSJpbml0RnVsbFNjcmVlbiI+CiAgICAgICAgICA8aSBjbGFzcz0iYnggYngtZnVsbHNjcmVlbiI+PC9pPgogICAgICAgIDwvYnV0dG9uPgogICAgICA8L2Rpdj4KCiAgICAgIDxiLWRyb3Bkb3duIHJpZ2h0IG1lbnUtY2xhc3M9ImRyb3Bkb3duLW1lbnUtbGcgcC0wIiB0b2dnbGUtY2xhc3M9ImhlYWRlci1pdGVtIG5vdGktaWNvbiIgdmFyaWFudD0iYmxhY2siPgogICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YnV0dG9uLWNvbnRlbnQ+CiAgICAgICAgICA8aSBjbGFzcz0iYnggYngtYmVsbCBieC10YWRhIj48L2k+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtZGFuZ2VyIGJhZGdlLXBpbGwiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubm90aWZpY2F0aW9uLmJhZGdlIikgfX08L3NwYW4+CiAgICAgICAgPC90ZW1wbGF0ZT4KCiAgICAgICAgPGRpdiBjbGFzcz0icC0zIj4KICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wiPgogICAgICAgICAgICAgIDxoNiBjbGFzcz0ibS0wIj57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm5vdGlmaWNhdGlvbi50ZXh0IikgfX08L2g2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWF1dG8iPgogICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJzbWFsbCI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5ub3RpZmljYXRpb24uc3VidGV4dCIpIH19PC9hPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxzaW1wbGViYXIgc3R5bGU9Im1heC1oZWlnaHQ6IDIzMHB4Ij4KICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6IHZvaWQoMCk7IiBjbGFzcz0idGV4dC1yZXNldCBub3RpZmljYXRpb24taXRlbSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhdmF0YXIteHMgbXItMyI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYXZhdGFyLXRpdGxlIGJnLXByaW1hcnkgcm91bmRlZC1jaXJjbGUgZm9udC1zaXplLTE2Ij4KICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImJ4IGJ4LWNhcnQiPjwvaT4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZWRpYS1ib2R5Ij4KICAgICAgICAgICAgICAgIDxoNiBjbGFzcz0ibXQtMCBtYi0xIj57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm5vdGlmaWNhdGlvbi5vcmRlci50aXRsZSIpIH19PC9oNj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvbnQtc2l6ZS0xMiB0ZXh0LW11dGVkIj4KICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1iLTEiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubm90aWZpY2F0aW9uLm9yZGVyLnRleHQiKSB9fTwvcD4KICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1iLTAiPgogICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJtZGkgbWRpLWNsb2NrLW91dGxpbmUiPjwvaT4KICAgICAgICAgICAgICAgICAgICB7eyAkdCgibmF2YmFyLmRyb3Bkb3duLm5vdGlmaWNhdGlvbi5vcmRlci50aW1lIikgfX0KICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9hPgogICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDogdm9pZCgwKTsiIGNsYXNzPSJ0ZXh0LXJlc2V0IG5vdGlmaWNhdGlvbi1pdGVtIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEiPgogICAgICAgICAgICAgIDxpbWcgc3JjPSJAL2Fzc2V0cy9pbWFnZXMvdXNlcnMvYXZhdGFyLTMuanBnIiBjbGFzcz0ibXItMyByb3VuZGVkLWNpcmNsZSBhdmF0YXIteHMiIGFsdD0idXNlci1waWMiIC8+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEtYm9keSI+CiAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im10LTAgbWItMSI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5ub3RpZmljYXRpb24uamFtZXMudGl0bGUiKSB9fTwvaDY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb250LXNpemUtMTIgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtYi0xIj57eyAkdCgibmF2YmFyLmRyb3Bkb3duLm5vdGlmaWNhdGlvbi5qYW1lcy50ZXh0IikgfX08L3A+CiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtYi0wIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1jbG9jay1vdXRsaW5lIj48L2k+CiAgICAgICAgICAgICAgICAgICAge3sgJHQoIm5hdmJhci5kcm9wZG93bi5ub3RpZmljYXRpb24uamFtZXMudGltZSIpIH19CiAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYT4KICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6IHZvaWQoMCk7IiBjbGFzcz0idGV4dC1yZXNldCBub3RpZmljYXRpb24taXRlbSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhdmF0YXIteHMgbXItMyI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYXZhdGFyLXRpdGxlIGJnLXN1Y2Nlc3Mgcm91bmRlZC1jaXJjbGUgZm9udC1zaXplLTE2Ij4KICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9ImJ4IGJ4LWJhZGdlLWNoZWNrIj48L2k+CiAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEtYm9keSI+CiAgICAgICAgICAgICAgICA8aDYgY2xhc3M9Im10LTAgbWItMSI+e3sgJHQoIm5hdmJhci5kcm9wZG93bi5ub3RpZmljYXRpb24uaXRlbS50aXRsZSIpIH19PC9oNj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvbnQtc2l6ZS0xMiB0ZXh0LW11dGVkIj4KICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1iLTEiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubm90aWZpY2F0aW9uLml0ZW0udGV4dCIpIH19PC9wPgogICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibWItMCI+CiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9Im1kaSBtZGktY2xvY2stb3V0bGluZSI+PC9pPgogICAgICAgICAgICAgICAgICAgIHt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubm90aWZpY2F0aW9uLml0ZW0udGltZSIpIH19CiAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvYT4KICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6IHZvaWQoMCk7IiBjbGFzcz0idGV4dC1yZXNldCBub3RpZmljYXRpb24taXRlbSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhIj4KICAgICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvaW1hZ2VzL3VzZXJzL2F2YXRhci00LmpwZyIgY2xhc3M9Im1yLTMgcm91bmRlZC1jaXJjbGUgYXZhdGFyLXhzIiBhbHQ9InVzZXItcGljIiAvPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhLWJvZHkiPgogICAgICAgICAgICAgICAgPGg2IGNsYXNzPSJtdC0wIG1iLTEiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubm90aWZpY2F0aW9uLnNhbGVuYS50aXRsZSIpIH19PC9oNj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvbnQtc2l6ZS0xMiB0ZXh0LW11dGVkIj4KICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1iLTEiPnt7ICR0KCJuYXZiYXIuZHJvcGRvd24ubm90aWZpY2F0aW9uLnNhbGVuYS50ZXh0IikgfX08L3A+CiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtYi0wIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1jbG9jay1vdXRsaW5lIj48L2k+CiAgICAgICAgICAgICAgICAgICAge3sgJHQoIm5hdmJhci5kcm9wZG93bi5ub3RpZmljYXRpb24uc2FsZW5hLnRpbWUiKSB9fQogICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9zaW1wbGViYXI+CiAgICAgICAgPGRpdiBjbGFzcz0icC0yIGJvcmRlci10b3AiPgogICAgICAgICAgPGEgY2xhc3M9ImJ0biBidG4tc20gYnRuLWxpZ2h0IGJ0bi1ibG9jayB0ZXh0LWNlbnRlciIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIj4KICAgICAgICAgICAgPGkgY2xhc3M9Im1kaSBtZGktYXJyb3ctZG93bi1jaXJjbGUgbXItMSI+PC9pPgogICAgICAgICAgICB7eyAkdCgibmF2YmFyLmRyb3Bkb3duLm5vdGlmaWNhdGlvbi5idXR0b24iKSB9fQogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICA8L2ItZHJvcGRvd24+CgogICAgICA8Yi1kcm9wZG93biByaWdodCB2YXJpYW50PSJibGFjayIgdG9nZ2xlLWNsYXNzPSJoZWFkZXItaXRlbSI+CiAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDpidXR0b24tY29udGVudD4KICAgICAgICAgIDxpbWcgY2xhc3M9InJvdW5kZWQtY2lyY2xlIGhlYWRlci1wcm9maWxlLXVzZXIiIHNyYz0iQC9hc3NldHMvaW1hZ2VzL3VzZXJzL2F2YXRhci0xLmpwZyIgYWx0PSJIZWFkZXIgQXZhdGFyIiAvPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImQtbm9uZSBkLXhsLWlubGluZS1ibG9jayBtbC0xIj57eyAkdCgibmF2YmFyLmRyb3Bkb3duLmhlbnJ5LnRleHQiKSB9fTwvc3Bhbj4KICAgICAgICAgIDxpIGNsYXNzPSJtZGkgbWRpLWNoZXZyb24tZG93biBkLW5vbmUgZC14bC1pbmxpbmUtYmxvY2siPjwvaT4KICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDwhLS0gaXRlbS0tPgogICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICA8cm91dGVyLWxpbmsgdGFnPSJzcGFuIiB0bz0iL2NvbnRhY3RzL3Byb2ZpbGUiPgogICAgICAgICAgICA8aSBjbGFzcz0iYnggYngtdXNlciBmb250LXNpemUtMTYgYWxpZ24tbWlkZGxlIG1yLTEiPjwvaT4KICAgICAgICAgICAge3sgJHQoIm5hdmJhci5kcm9wZG93bi5oZW5yeS5saXN0LnByb2ZpbGUiKSB9fQogICAgICAgICAgPC9yb3V0ZXItbGluaz4KICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIGNsYXNzPSJkLWJsb2NrIiBocmVmPSJqYXZhc2NyaXB0OiB2b2lkKDApOyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2Utc3VjY2VzcyBmbG9hdC1yaWdodCI+MTE8L3NwYW4+CiAgICAgICAgICA8aSBjbGFzcz0iYnggYngtd3JlbmNoIGZvbnQtc2l6ZS0xNiBhbGlnbi1taWRkbGUgbXItMSI+PC9pPgogICAgICAgICAge3sgJHQoIm5hdmJhci5kcm9wZG93bi5oZW5yeS5saXN0LnNldHRpbmdzIikgfX0KICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIGhyZWY9ImphdmFzY3JpcHQ6IHZvaWQoMCk7Ij4KICAgICAgICAgIDxpIGNsYXNzPSJieCBieC1sb2NrLW9wZW4gZm9udC1zaXplLTE2IGFsaWduLW1pZGRsZSBtci0xIj48L2k+CiAgICAgICAgICB7eyAkdCgibmF2YmFyLmRyb3Bkb3duLmhlbnJ5Lmxpc3QubG9ja3NjcmVlbiIpIH19CiAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgPGItZHJvcGRvd24tZGl2aWRlcj48L2ItZHJvcGRvd24tZGl2aWRlcj4KICAgICAgICA8YSBocmVmPSIvbG9nb3V0IiBjbGFzcz0iZHJvcGRvd24taXRlbSB0ZXh0LWRhbmdlciI+CiAgICAgICAgICA8aSBjbGFzcz0iYnggYngtcG93ZXItb2ZmIGZvbnQtc2l6ZS0xNiBhbGlnbi1taWRkbGUgbXItMSB0ZXh0LWRhbmdlciI+PC9pPgogICAgICAgICAge3sgJHQoIm5hdmJhci5kcm9wZG93bi5oZW5yeS5saXN0LmxvZ291dCIpIH19CiAgICAgICAgPC9hPgogICAgICA8L2ItZHJvcGRvd24+CgogICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93biBkLWlubGluZS1ibG9jayI+CiAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gaGVhZGVyLWl0ZW0gbm90aS1pY29uIHJpZ2h0LWJhci10b2dnbGUgdG9nZ2xlLXJpZ2h0IiBAY2xpY2s9InRvZ2dsZVJpZ2h0U2lkZWJhciI+CiAgICAgICAgICA8aSBjbGFzcz0iYnggYngtY29nIGJ4LXNwaW4gdG9nZ2xlLXJpZ2h0Ij48L2k+CiAgICAgICAgPC9idXR0b24+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CjwvaGVhZGVyPgo="},null]}